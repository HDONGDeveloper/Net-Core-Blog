// <auto-generated />
using System;
using Core.Blog.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Core.Blog.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    partial class BlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Blog.Core.Models.AdvertisementInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Createdate");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Remark");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("ID");

                    b.ToTable("AdvertisementInfo");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.ArticleCommentsInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BlogPostsInfoID");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("PID");

                    b.Property<string>("PostsID");

                    b.Property<int>("UserID");

                    b.Property<int?>("UserInfoID");

                    b.HasKey("ID");

                    b.HasIndex("BlogPostsInfoID");

                    b.HasIndex("UserInfoID");

                    b.ToTable("ArticleCommentsInfo");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.BlogPostsInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Describe");

                    b.Property<int>("Heat");

                    b.Property<string>("KeyWords");

                    b.Property<int>("TechnologyClassifyID");

                    b.Property<int?>("TechnologyClassifyInfoID");

                    b.Property<string>("Title");

                    b.Property<int>("UserID");

                    b.Property<int?>("UserInfoID");

                    b.HasKey("ID");

                    b.HasIndex("TechnologyClassifyInfoID");

                    b.HasIndex("UserInfoID");

                    b.ToTable("BlogPostsInfo");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.TechnologyClassifyInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("PID");

                    b.HasKey("ID");

                    b.ToTable("TechnologyClassifyInfo");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.UserCollectInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollID");

                    b.Property<int>("CollType");

                    b.Property<int>("UserID");

                    b.Property<int?>("UserInfoID");

                    b.HasKey("ID");

                    b.HasIndex("UserInfoID");

                    b.ToTable("UserCollectInfo");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.UserInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlogUrl");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Email");

                    b.Property<string>("HeadUrl");

                    b.Property<DateTime>("LastErrTime");

                    b.Property<string>("LoveSentence");

                    b.Property<string>("PassKey");

                    b.Property<string>("PassWord");

                    b.Property<string>("Role");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.ArticleCommentsInfo", b =>
                {
                    b.HasOne("Core.Blog.Core.Models.BlogPostsInfo", "BlogPostsInfo")
                        .WithMany("ArticleComments")
                        .HasForeignKey("BlogPostsInfoID");

                    b.HasOne("Core.Blog.Core.Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoID");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.BlogPostsInfo", b =>
                {
                    b.HasOne("Core.Blog.Core.Models.TechnologyClassifyInfo", "TechnologyClassifyInfo")
                        .WithMany()
                        .HasForeignKey("TechnologyClassifyInfoID");

                    b.HasOne("Core.Blog.Core.Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoID");
                });

            modelBuilder.Entity("Core.Blog.Core.Models.UserCollectInfo", b =>
                {
                    b.HasOne("Core.Blog.Core.Models.UserInfo", "UserInfo")
                        .WithMany("UserCollectInfos")
                        .HasForeignKey("UserInfoID");
                });
#pragma warning restore 612, 618
        }
    }
}
